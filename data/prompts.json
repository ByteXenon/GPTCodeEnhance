{
    "refactorCode": "Hello, I would like you to refactor and improve the provided code. Your goal is to make it smaller, easier to understand, and well-documented. Please follow these guidelines:\n- Reduce the code's size while maintaining its functionality.\n- Improve readability and clarity by making the code more understandable.\n- Add comments to explain the code and update existing comments as necessary.\n- Your refactored code must be properly indented, you must follow the previous indentation style.\n- Do not include any explanations or comments about the changes you made.\n- Return only a single code block without any additional text or explanations.\nHere is the code you should refactor:\n```{selectedCode}```",
    "improveCode": "I want you to act as a senior developer, as a senior developer, your task is to improve, comment, and refactor the code snippet that I am going to give you. Keep the code small, easy to understand, and maintain the existing indentation style. Adhere to best practices and ensure the generated code is of high quality. Return a message containing only one code block enclosed in triple backticks, without any additional text or explanation. Here's the code snippet to improve:\n```{selectedCode}```",
    "_old_improveCode": "Hello, I would like you to generate/improve code based on comments. Follow these guidelines:\n- Only make changes if explicitly instructed by a comment.\n- Generate code based on comments within the code.\n- Your code must be properly indented, you must follow the previous indentation style.\n- Do not include explanations or comments about the changes made.\n- Return only a single code block without additional text.\nCode to improve:\n```{selectedCode}```",
    "modularizeCode": "Hello, I would like you to improve the provided code by modularizing it into reusable components. Consider the following guidelines:\n- Identify logical sections of the code that can be encapsulated into separate modules.\n- Refactor the code to extract reusable functions or classes.\n- Ensure the modularization does not introduce unnecessary complexity.\n- Do not include explanations or comments about the changes made.\n- Return only a single code block without additional text.\nCode to improve:\n```{selectedCode}```",
    "enhanceCodeFromComments": "Hello, I would like you to generate/improve code based on comments with keyword 'ChatGPT:'. Follow these guidelines:\n- Only make changes if explicitly instructed by a comment.\n- Generate code based only on comments with tag 'ChatGPT:' within the code.\n- Your code must be properly indented, you must follow the previous indentation style.\n- Do not include explanations or comments about the changes made.\n- Return only a single code block without additional text.\nCode to improve:\n```{selectedCode}```",
    "documentCode": "Hello, I would like you to enhance the provided code by adding comprehensive documentation. Consider the following guidelines:\n- Document the purpose, usage, and expected inputs/outputs of the code.\n- Add comments to clarify complex sections or algorithms.\n- Provide examples or code snippets demonstrating how to use the code.\n- Ensure the documentation is clear, concise, and easily understandable.\n- Do not include explanations or comments about the changes made.\n- Return only a single code block without additional text.\nCode to improve:\n```{selectedCode}```",
    "improveDesignPatterns": "Hello, I would like you to improve the provided code by incorporating appropriate design patterns. Consider the following guidelines:\n- Analyze the code to identify areas where design patterns can enhance the architecture.\n- Implement the chosen design patterns by refactoring the code.\n- Ensure the design patterns improve code maintainability, extensibility, or reusability.\n- Do not include explanations or comments about the changes made.\n- Return only a single code block without additional text.\nCode to improve:\n```{selectedCode}```"
}